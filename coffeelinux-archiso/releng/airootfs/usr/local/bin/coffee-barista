#!/bin/sh

#Prepare pacman
rfkill unblock all
clear
pacman-key --init
clear
pacman-key --populate archlinux
clear

#Network Setup Begins
while [ "$netcheck00" != "1" ] && [ "$netcheck00" != "2" ] && [ "$netcheck00" != "3" ]; do
clear

printf "%b" "\nWhat type of network do you have? (Default: 1)\n"
printf "%b" "\n1 - Ethernet\n"
printf "%b" "\n2 - Wifi\n"
printf "%b" "\n3 - I have already connected to the internet\n"
read -r netcheck00
case $netcheck00 in
 1) printf "%b" "\nPerfect\n" ;;
 2) printf "%b" "\nLet's move on then.\n" ;;
 3) printf "%b" "\nLet's move on then.\n" ;;
 *) printf "%b" "\nUnrecognized option, selecting default..\n" ;;
esac

if [ "$netcheck00" = "1" ]; then
netpass00=ethernet
fi
if [ "$netcheck00" = "2" ]; then
netpass00=wifi
fi
if [ "$netcheck00" = "3" ]; then
netpass00=ethernet
fi
if [ "$netcheck00" != "3" ] && [ "$netcheck00" != "2" ] && [ "$netcheck00" != "1" ]; then
netcheck00=3
netpass00=ethernet
fi
done

clear

if [ "$netpass00" = "ethernet" ]; then
printf "%b" "\nEthernet selected, or already connected, skipping this part.\n"
fi

if [ "$netpass00" = "wifi" ]; then
while [ "$wifipasscheck" != "1" ]; do
clear
rfkill unblock all
iwctl station list
printf "%b" "\nSet your Wifi device ID. (Usually 'wlan0')\n"
read -r wifi00
wifi0=$wifi00
printf "%b" "\n$wifi00. Is this correct?\n"
printf "%b" "\n1 - yes\n"
printf "%b" "\n2 - no\n"
read -r wifipasscheck
case $wifipasscheck in
 1) printf "%b" "\nPerfect\n" ;;
 *) printf "%b" "\nLet's retry\n" ;;
esac

done
fi

clear

if [ "$netpass00" = "wifi" ]; then
while [ "$ssidcheck" != "1" ]; do
iwctl station "$wifi0" get-networks
printf "%b" "\nSet your Network SSID (Your network name).\n"
read -r ssid00
ssid0=$ssid00
printf "%b" "\n$ssid00. Is this correct?\n"
printf "%b" "\n1 - yes\n"
printf "%b" "\n2 - no\n"
read -r ssidcheck
case $ssidcheck in
 1) printf "%b" "\nPerfect\n" ;;
 *) printf "%b" "\nLet's retry\n" ;;
esac
done
fi

clear

if [ "$netpass00" = "wifi" ]; then
while [ "$netpasswordcheck" != "1" ]; do
printf "%b" "\nEnter your Wifi password.\n"
read -r netpassword00
netpassword0=$netpassword00
printf "%b" "\n$netpassword00. Is this correct?\n"
printf "%b" "\n1 - yes\n"
printf "%b" "\n2 - no\n"
read -r netpasswordcheck
case $netpasswordcheck in
 1) printf "%b" "\nPerfect\n" ;;
 *) printf "%b" "\nLet's retry\n" ;;
esac
done
fi

networkready="yes"

while [ "$command17finished" != "1" ]; do
if [ "$networkready" = "yes" ]; then
#- Set variables for iwctl
clear
if [ "$netpass00" = "wifi" ]; then
rfkill unblock all
printf "%b" "\n" | iwctl device $wifi0 set-property Powered on
printf "%b" "\nPowering on wifi device for a minute..\n"
sleep 5
printf "%b" "\n" | iwctl --passphrase $netpassword0 station $wifi0 connect $ssid0
printf "%b" "\nEnsuring we have a connection...\n"
sleep 10
printf "%b" "\nSetting intial pacman keyring up...\n"
pacman-key --init
pacman-key --populate archlinux
printf "%b" "\nSet keys successfully..\n"
sleep 5
pacman -Syy --noconfirm archlinux-keyring
else
printf "%b" "\nWe are already connected to the internet, preparing for launch..\n"
sleep 10
printf "%b" "\nSetting intial local pacman keyring up...\n"
pacman-key --init
pacman-key --populate archlinux
printf "%b" "\nSet local pacman keys successfully..\n"
sleep 5
pacman -Syy --noconfirm archlinux-keyring
clear
fi
fi
command17finished="1"
done
command17finished="0"
#Network Setup Finished

#Update Needed Files
rm /opt/os-release
rm /opt/lsb-release
rm /etc/os-release
rm /etc/lsb-release
rm /opt/coffee-injector
rm /usr/local/bin/coffeebrewer4
rm /etc/xdg/kwinrc
rm /etc/sddm.config.d/virtualkbd.conf
rm /etc/sddm.config.d/autologin.conf
clear
wget -L https://raw.githubusercontent.com/Project-X-Mods/coffeelinux/master/coffeelinux-archiso/releng/airootfs/etc/sddm.config.d/virtualkbd.conf -P /etc/sddm.config.d/
clear
wget -L https://raw.githubusercontent.com/Project-X-Mods/coffeelinux/master/coffeelinux-archiso/releng/airootfs/etc/sddm.config.d/autologin.conf -P /etc/sddm.config.d/
clear
wget -L https://raw.githubusercontent.com/Project-X-Mods/coffeelinux/master/coffeelinux-archiso/releng/airootfs/etc/xdg/kwinrc -P /etc/xdg/
clear
wget -L https://raw.githubusercontent.com/Project-X-Mods/coffeelinux/master/coffeelinux-archiso/releng/airootfs/usr/local/bin/coffeebrewer4 -P /usr/local/bin/
clear
wget -L https://raw.githubusercontent.com/Project-X-Mods/coffeelinux/master/coffeelinux-archiso/releng/airootfs/opt/os-release -P /opt/
clear
wget -L https://raw.githubusercontent.com/Project-X-Mods/coffeelinux/master/coffeelinux-archiso/releng/airootfs/opt/lsb-release -P /opt/
clear
wget -L https://raw.githubusercontent.com/Project-X-Mods/coffeelinux/master/coffeelinux-archiso/releng/airootfs/opt/os-release -P /etc/
clear
wget -L https://raw.githubusercontent.com/Project-X-Mods/coffeelinux/master/coffeelinux-archiso/releng/airootfs/opt/lsb-release -P /etc/
clear
wget -L https://raw.githubusercontent.com/Project-X-Mods/coffeelinux/master/coffeelinux-archiso/releng/airootfs/opt/coffee-injector -P /opt/
clear
chmod 755 /usr/local/bin/coffeebrewer4
clear
#Finished Updating
#Main Menu
while [ "$typecheck00" != "1" ] && [ "$typecheck00" != "2" ]; do
clear
printf "%b" "\n#### Welcome to Coffee Linux Iso ####\n"
printf "%b" "\n########## Barista v.1.1.5 ##########\n"
printf "%b" "\nWhat whould you like to do? (Default: 1)\n"
printf "%b" "\n1 - Install CoffeeLinux\n"
printf "%b" "\n2 - Exit\n"

read -r typecheck00
case $typecheck00 in
 1) printf "%b" "\nPerfect\n" ;;
 2) printf "%b" "\nLet's move on then.\n" ;;
 *) printf "%b" "\nUnrecognized option, selecting default..\n" ;;
esac

if [ "$typecheck00" = "1" ]; then
coffeebrewer4
fi
if [ "$typecheck00" = "2" ]; then
printf "%b" "\nExiting now...\n"
fi
if [ "$typecheck00" != "1" ] && [ "$typecheck00" != "2" ]; then
typecheck00=1
coffeebrewer4
fi
done
